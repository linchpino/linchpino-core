name: Build and Deploy Current Branch to linchpino-core-dev server

on:
  pull_request:
      branches: [development]
      types: [opened,reopened]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  Build-and-push-to-GHCR:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@main

      - name: 'Login to GitHub Container Registry'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}

      - name: tshout
        
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}${{ github.base_ref }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  Deploy-to-linchpino-core-server:
      runs-on: self-hosted
      permissions:
        contents: read
        packages: write
      needs: Build-and-push-to-GHCR
      steps:
        - name: Connect to linchpino-core on GCP instance
          run: |
            cd ${{ secrets.WORK_DIR }}
            pwd
            sudo git fetch --all
            sudo git reset --hard
            echo "the current branch is: " ${GITHUB_HEAD_REF##*/}
            sudo git checkout origin/${GITHUB_HEAD_REF##*/}
            sudo git checkout origin/${GITHUB_HEAD_REF##*/} --  docker-compose.yml
            sudo git checkout origin/${GITHUB_HEAD_REF##*/} -- ./initscripts/init.sql
            sudo sed -i "s/POSTGRES_DB=.*/POSTGRES_DB=${GITHUB_HEAD_REF##*\/}/" /opt/actions-runner/.env
            export POSTGRES_DB=${GITHUB_HEAD_REF##*/}
            sudo sed -i "s/POSTGRES_URL=.*/POSTGRES_URL=jdbc:postgresql:\/\/api-dev.linchpino.com:5432\/${GITHUB_HEAD_REF##*\/}/" /opt/actions-runner/.env
            export POSTGRES_URL=jdbc:postgresql://api-dev.linchpino.com:5432/${GITHUB_HEAD_REF##*/}
            sudo sed -i "s/\$currentbranches/${GITHUB_HEAD_REF##*\/}/g" ./initscripts/init.sql
            sudo sed -i "s/\/linchpino-core:.*/\/linchpino-core:${GITHUB_HEAD_REF##*\/}/" docker-compose.yml
            if [ ${GITHUB_HEAD_REF##*/} == "development" ]; then
            sudo sed -i "s/#-/"-"/" docker-compose.yml
            fi
            docker-compose stop && docker-compose rm -f linchpino-core && docker-compose pull linchpino-core
            docker-compose up -d
