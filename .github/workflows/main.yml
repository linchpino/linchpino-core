name: Build and Deploy Current Branch to linchpino-core-dev server

on:
  pull_request:
      branches: [development]
      types: [opened,reopened]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  sonarcloud:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@v2.2 # Ex: v2.1.0, See the latest version at https://github.com/marketplace/actions/sonarcloud-scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=linchpino_linchpino-core
            -Dsonar.organization=linchpino
            -Dsonar.test.exclusions=src/main/kotlin/com/linchpino/core/security/SecurityConfig*,src/main/kotlin/com/linchpino/core/exception/*
            -Dsonar.verbose=true
  Build-and-push-to-GHCR:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: sonarcloud
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@main

      - name: 'Login to GitHub Container Registry'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  Deploy-to-linchpino-core-server:
      runs-on: self-hosted
      permissions:
        contents: read
        packages: write
      needs: Build-and-push-to-GHCR
      steps:
        - name: Connect to linchpino-core on GCP instance
          env:
            PR_NUMBER: ${{ github.event.number }}
          run: |
            cd ${{ secrets.WORK_DIR }}
            sudo git fetch --all
            sudo git reset --hard
            echo "GITHUB_REF : "${GITHUB_REF##*/}
            if [ ${GITHUB_REF##*/} == "merge" ]; then
            currentBranch=pr-$PR_NUMBER
            sudo git checkout origin/development --  docker-compose.yml
            echo "the current branch is : " $currentBranch
            else
            currentBranch=${GITHUB_REF##*/}
            echo "the current branch is : " $currentBranch
            sudo git checkout origin/$currentBranch
            sudo git checkout origin/$currentBranch --  docker-compose.yml
            sudo git checkout origin/$currentBranch -- ./initscripts/init.sql
            fi
            sudo sed -i "s/POSTGRES_DB=.*/POSTGRES_DB=$currentBranch/" /opt/actions-runner/.env
            export POSTGRES_DB=$currentBranch
            sudo sed -i "s/POSTGRES_URL=.*/POSTGRES_URL=jdbc:postgresql:\/\/api-dev.linchpino.com:5432\/$currentBranch/" /opt/actions-runner/.env
            export POSTGRES_URL=jdbc:postgresql://api-dev.linchpino.com:5432/$currentBranch
            sudo sed -i "s/\$currentbranches/$currentBranch/g" ./initscripts/init.sql
            sudo sed -i "s/\/linchpino-core:.*/\/linchpino-core:$currentBranch/" docker-compose.yml
            if [ ${GITHUB_REF##*/} == "development" ]; then
            sudo sed -i "s/#-/"-"/" docker-compose.yml
            fi
            docker-compose stop && docker-compose rm -f linchpino-core && docker-compose pull linchpino-core
            docker-compose up -d
