server:
  port: 8088
  servlet:
    context-path: /linchpino-api

spring-doc:
  swagger-ui:
    path: /api.html

spring:
  jmx: # JMX support in Spring provides the features to easily and transparently integrate your Spring application into a JMX infrastructure.
    enabled: false
  cloud: # GCP
    discovery:
      enabled: false
    config:
      enabled: false
  datasource:
    driverClassName: org.postgresql.Driver
    username: postgres
    password: postgres
    url: jdbc:postgresql://localhost:5432/postgres
  data:
    jpa.repositories:
      enabled: true
      bootstrap-mode: default # for Prod Profile Set default
  jpa:
    generate-ddl: true
    hibernate.naming.physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    hibernate.ddl-auto: none
    properties:
      org.hibernate.flushMode: ALWAYS
      hibernate:
        max_fetch_depth: 1
        dialect: org.hibernate.dialect.PostgreSQLDialect
        default_schema: LINCHPINO
        id.new_generator_mappings: true
        show-sql: true
        format_sql: true
        generate_statistics: true
        jdbc.batch_size: 100
        order_inserts: true
        order_updates: true
        use_sql_comments: true
        hbm2ddl: none
      javax.persistence.schema-generation.create-source: metadata
      javax.persistence.schema-generation.scripts.action: create
      javax.persistence.schema-generation.scripts.create-target: create.sql
      javax.persistence.schema-generation.scripts.drop-target: drop.sql
    defer-datasource-initialization: true
    hibernate:
      use-new-id-generator-mappings: false
  jackson:
    serialization:
      write-dates-as-timestamps: false